[manifest]
version = "1.0.0"
dump_lua = true
priority = 0


#fixing engine
[[patches]]
[patches.regex]
target = "engine/controller.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "engine/moveable.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "engine/sound_manager.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "engine/text.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "engine/ui.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"

#fixing functions
[[patches]]
[patches.regex]
target = "functions/button_callbacks.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
# [[patches]]
# [patches.regex]
# target = "functions/common_events.lua"
# pattern = "<= math\\.max\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)"
# position = "at"
# payload = "<= (Number and Number:new(math.max($1)) or (math.max($1)))"
[[patches]]
[patches.regex]
target = "functions/common_events.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "functions/misc_functions.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "functions/state_events.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "functions/UI_definitions.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"

#fixing rest
[[patches]]
[patches.regex]
target = "back.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "blind.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "card.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "cardarea.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "game.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "main.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"
[[patches]]
[patches.regex]
target = "tag.lua"
pattern = "((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+) (>|<|>=|<=|==) ((?:#|(?:not )+)?[A-Za-z_]\\w*(?:\\[\\S+?\\])*(?:\\.[A-Za-z_]\\w*(?:\\[\\S+?\\])*)*(?:[\\:\\.][A-Za-z_]\\w*\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\)|\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*(?:\\([^)(]*\\)[^)(]*)*\\)[^)(]*)*\\)[^)(]*)*\\))?|[\\d\\.]+)"
position = "at"
payload = "(Number and Number:new($1) or ($1)) $2 (Number and Number:new($3) or ($3))"

# adding for annotations

# top level
[[patches]]
[patches.pattern]
target = "card_character.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "challenges.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "challenges.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "conf.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1

# engine
[[patches]]
[patches.pattern]
target = "engine/event.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "engine/http_manager.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "engine/node.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "engine/object.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "engine/particles.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "engine/profile.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1
[[patches]]
[patches.pattern]
target = "engine/string_packer.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1

# functions
[[patches]]
[patches.pattern]
target = "functions/test_functions.lua"
pattern = "ϖ"
position = "at"
payload = "ϖ"
match_indent = true
times = 1